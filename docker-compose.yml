version: "3.8"
services:
  db:
    image: postgres:15.2
    restart: always
    container_name: message_postgre
    env_file:
      - email_app/.env
    environment:
      - POSTGRES_USER=email_admin
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=email_db
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - 5432
  backend: &backend
    container_name: message_backend
    restart: always
    build:
      context: ./email_app
      dockerfile: Dockerfile
    image: message_backend_image
    volumes:
      - ./email_app:/code
      - static_volume:/code/static
    command: uvicorn email_app.asgi:application --reload --host 0.0.0.0 --port 8000
    env_file:
      - email_app/.env
    ports:
      - "8000:8000"
    depends_on:
      - db
  frontend:
    container_name: message_frontend
    restart: "no"
    build:
      context: ./email_vue
      dockerfile: Dockerfile
    image: message_frontend_image
    volumes:
      - ./email_vue:/app:rw
      - /app/node_modules
    environment:
      - npm_config_unsafe_perm=true
    ports:
      - "8080:8080"
    depends_on:
      - backend
      - db
  nginx:
    image: nginx:alpine
    container_name: message_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/usr/src/app/static
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
  broker:
    image: rabbitmq
    restart: unless-stopped
    container_name: message_broker
    ports:
      - "5672:5672"
    expose:
      - 5672
  channels:
    image: redis:6.2-alpine
    container_name: message_channels
    restart: unless-stopped
    ports:
      - "6379:6379"
    expose:
      - 6379
    command:
      - /bin/sh
      - -c
      - "redis-server"
    depends_on:
      - backend
  celery:
    <<: *backend
    container_name: message_celery
    command:
      - /bin/sh
      - -c
      - "celery -A email_app worker -l info"
    volumes:
      - ./email_app:/code
    ports: []
    depends_on:
      - backend
      - broker
  celery-beat:
    <<: *backend
    container_name: message_celery_beat
    command:
      - /bin/sh
      - -c
      - "celery -A email_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./email_app:/code
    ports: []
    depends_on:
      - backend
      - broker
      - celery

volumes:
  postgres_data:
  static_volume: